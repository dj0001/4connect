<!DOCTYPE html>
<html><head>
    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <title>4 Gewinnt: O = KI</title>
    <meta name="description" content="build a row of four pieces horizontally, vertically or diagonally">
    <meta name="author" content="DJ">
    <meta name="keywords" content="">
<meta name="viewport" content="width=device-width">
<meta name="theme-color" content="#5ac1f2">
<link rel='manifest' href='manifest.json'>
<link rel="icon" type="image/png" sizes="192x192" href="4connect_192.png">
     
    <script>
//        window.onload = function()
//        {
            var netclick=1; var autoki="off" // 0; "on"   edit here!
            var p1 = 'blue', p2 = 'red', bg="repeating-linear-gradient(to right, white, #FBF9F3 50px) fixed", bgfb="white" // bg="url('paper.gif') fixed"
//          var p1 = 'radial-gradient(#4D4DFF, blue)', p2 = 'radial-gradient(#FF4D4D, red)', 
var lng = {en:[" 's turn"," has won"],de:[" ist am Zug"," hat gewonnen"],es:[" juega"," ganó"]}
nl=navigator.language; lang=(nl)?nl.substring(0,2):"en"; if (!lng[lang]) lang="en"; var turn = lng[lang][0]
            var gameOver = false, firstxhr=true;  //first=true; 
            var intelligence = 2, undef, ch, t, aki, s={p1:0,p2:0}, End=[0,0,0,0] //p1s=0, p2s=0;
 var netcolor = ((window.location.search.slice(1) == "-1") ? -1 : 1)  //netplay
 var color = -1  //((window.location.search.slice(1) == "-1") ? -1 : 1)
 if(window.location.search) intelligence = intelligence+1; //Int. erh.
 var zug = 0;  var Z = new Array(3,2,4,1,5,0,6);  var checkColor,x=0,y=0,xcol=3;  // Zugvorsortierung  
if (window.Audio) {var audiop = new Audio();audiop.setAttribute("src","Tic1.wav");} 
            
            function check4End(depth)  //depth für negmax erf.
            {//bew=checkColor;
                var i, n, m, counter  //, counter2
                               
                //horizontal -----------------------
                counter = 0; //counter2 = 0;
                for(i=0;i<7;i++)
                {
                    if(f[10*i+y] == checkColor)  //p1
                    {
                        if(!depth) End[counter]=10*i+y; counter++;if(counter >= 4) return checkColor*(100-depth);  // bew*(100-depth) für negmax erf. ;V[i]++ ;||(V[i] >= 4) ;counter2 = 0
                    }
                    else counter = 0;  //counter2 = 0;
                    //checkCounter(counter);
                }
                //vertikal -----------------------
                counter = 0;
                for(i=y;i<=5;i++) // i=5;i>=y;i--
                {
                    if(f[10*x+i] == checkColor)
                    {
                        if(!depth) End[counter]=10*x+i; counter++;if(counter >= 4) return checkColor*(100-depth);
                    }

                    else counter = 0;
                    //checkCounter(counter);
                }
                
                //diagonal 1 -----------------------
                // alle 6 Diagonalen
                counter = 0; //counter2 = 0;
                n = x; /* */ 
                m = y;
                
                while(n>0 && m>0)
                {
                    n--;
                    m--;
                } 
                
                for(i=0;i<6;i++)
                {
                    if(n<=6 && m<=5)
                    {
                        if(f[10*n+m] == checkColor)
                        {
                            if(!depth) End[counter]=10*n+m; counter++;if(counter >= 4) return checkColor*(100-depth);
                        }

                        else counter = 0; //counter2 = 0;
                        //checkCounter(counter);
                        
                        n++;
                        m++;
                    }
                    else break;
                }
                
                //diagonal 2 -----------------------
                // alle 6 Diagonalen
                counter = 0; //counter2 = 0;
                n = x; /* */ 
                m = y;
                
                while(n>0 && m<5)
                {
                    n--;
                    m++;
                } 
                
                for(i=0;i<6;i++)
                {
                    if(n<=6 && m>=0)
                    {
                        if(f[10*n+m] == checkColor)
                        {
                            if(!depth) End[counter]=10*n+m; counter++;if(counter >= 4) return checkColor*(100-depth);
                        }

                        else counter = 0; //counter2 = 0;
                        //checkCounter(counter);
                        
                        n++;
                        m--;
                    }
                    else break;
                }
               
            }


function werfe(col,i) 
                                {
                                    if( !f[10*col+i]&&(i==5)||!f[10*col+i]&&f[10*col+(i+1)] )
                                    {if(i>0) {document.getElementById(col+'_'+(i-1)).style.background = bg;}  //ani  Color
                                        document.getElementById(col+'_'+i).style.background = (color==1)?p1:p2;
                                        f[10*col+i]=color //document.getElementById(col+'_'+i).setAttribute('title',color);
                                        x=col,y=i //letzter Zug
                                        //return //break;
                                document.getElementById(xcol+'_0').style.borderTopColor = '';  //for(i=0;i<7;i++){}  #000
                                document.getElementById(col+'_0').style.borderTopColor = 'yellow';xcol=col;  //letzten Zug zeigen col
                                        wechsle();
                                    }
                                    else if(!f[10*col+i]) //ani
                                    {document.getElementById(col+'_'+i).style.background = (color==1)?p1:p2;if(i>0) document.getElementById(col+'_'+(i-1)).style.background = bg};
                                    if (i<5) {i++;setTimeout("werfe("+col+","+i+")",20)}
                                }

function tasten(ek){ecol=document.getElementById(xcol+'_0') //.style.borderTopColor;
if((ek==39||ek==56) && xcol<6) {ecol.style.borderTopColor = '#000'; xcol++; document.getElementById(xcol+'_0').style.borderTopColor = 'yellow';}
else if ((ek==37||ek==50) && xcol>0) {ecol.style.borderTopColor = '#000'; xcol--; document.getElementById(xcol+'_0').style.borderTopColor = 'yellow';}
else if (ek==13||ek==53) {werfe(xcol,0)}  //werfe(event.keyCode-49,0)
else if (ek==66) {if (sg) iwerfe(sg.replace(/.$/,""))}  //b=undo
}

function wechsle() {
                                sg+=(1*x+1);document.getElementById('infotext').href="data:text/plain;utf-8,"+sg
                                checkColor=color //playercol=undef;  //evt. KI rücksetzen
                                document.getElementById('infotext').innerHTML=turn
                                if (check4End(0)) {document.getElementById('infotext').innerHTML = lng[lang][1]; //'&nbsp;&nbsp;hat gewonnen';
                                (color==1)?s.p1++:s.p2++;document.title="4Gewinnt:"+((netcolor==1)?s.p1+":"+s.p2:s.p2+":"+s.p1);
                                gameOver = true; // ki kompatibel
                                for(var i=0;i<4;i++) document.getElementById(Math.floor(End[i]/10)+"_"+End[i]%10).style.borderColor = 'yellow'
                                }
                                //document.title=("4Gewinnt") //alt.
                                //ki();  //alternativ

                                
                                if(gameOver === false)
                                { zug++;if(zug >= 42) {document.getElementById('infotext').innerHTML = '&nbsp;&nbsp;unentschieden';gameOver = true}  //first=false;
                                 color = -color //(color == p1)?p2:p1
                                 document.getElementById('info').style.background = (color==1)?p1:p2 //color
                                 if (aki==color) ki()  //autoki
                                }

 }

function ki(){ startt=new Date().getTime()
if((gameOver === false)) {  document.title="KI rechnet "+intelligence;document.getElementById(xcol+'_0').style.borderTopColor = '';document.getElementById('infotext').innerHTML="&nbsp;zieht ...";setTimeout(ki2,2)}
			else {intelligence++;document.getElementById('infotext').innerHTML="KI up to "+intelligence} } //start() document.title

function ki2(){
			if (intelligence+zug == 41) intelligence=intelligence+1;  //2 möglich
			next = search(0, color, -100, 100);
			document.title="4Gewinnt:"+(1*next+1)+":"+ch+" "+Math.floor((new Date().getTime()-startt)/100)/10+"s";  //+next+
			if(ch!=0) document.title = document.title + ((ch>0)?" you lose in ":" you win in ")+(99-Math.abs(ch))
			if((zug+intelligence) >= 42) document.title=document.title+"="  //bis Ende durchger.
			werfe(next,0)  }

function start(){
document.getElementsByTagName('body')[0].style.background = bgfb; document.getElementsByTagName('body')[0].style.background = bg;
bg=document.getElementsByTagName('body')[0].style.background
  for(i=0;i<document.getElementsByClassName('box').length-1;i++)
  {document.getElementsByClassName('box')[i].style.background=bg
  document.getElementsByClassName('box')[i].style.borderColor = '#000';}
  f=[]; //document.getElementsByClassName('box')[i].setAttribute('title','')

color = -color //document.getElementById('info').style.backgroundColor == p1) ? '?-1' : '';
document.getElementById('info').style.background = (color==1)?p1:p2  //Color
document.getElementById('infotext').innerHTML = turn
zug=0;gameOver = false;aki=0;sg="";  //first=false;
}

	// negamax search with alpha-beta pruning
	// http://en.wikipedia.org/wiki/Negamax
	// http://en.wikipedia.org/wiki/Alpha-beta_pruning
	function search(depth, player, alpha, beta){ //alert(depth)
		var col, c, i, min = -100, max, value, next;
		checkColor= -player; //playercol
		if (value = check4End(depth)) // either player won
			return value * player;
		if (intelligence > depth){ // recursion cutoff
for(c=0;c<=6;c++){       //berechne Zugmöglichkeiten  col
col=Z[c];
			for(i=5;i>=0;i--){
				if (!f[10*col+i]) {  // == ''   //(!board[i])  freier Zug
					f[10*col+i]=player; //board[i] = player;  simuliere Zug
					x=col,y=i  //letzter Zug
					value = -search(depth + 1, -player, -beta, -alpha);
					f[10*col+i]=0  //''; //board[i] = undef; rücksetzen
					if (max === undef || value > max) max = value;
					if (value > alpha) alpha = value;
					if (alpha >= beta) return alpha; // prune branch
					if (max > min){ min = max; next = col; } // best odds for next move  i
				break;}  //nur ein Zug ausführen
			}}		
		} 
		ch=max; return depth ? max || 0 : next; // 0 is tie game
	}
 

           
            function init()
            {
                var n, el = document.getElementById('feld') // document.getElementsByName('feld') //.getElementsByTagName('body')[0];
                
                start()
                
                for(n=0;n<el.childNodes.length;n++)
                {
                    if(el.childNodes[n])
                    {
                        //attach(el.childNodes[n], 'click', function() {
                        el.childNodes[n].addEventListener('click', function() {
                            if( gameOver === false && ((netclick)?netclick:(!document.getElementById('net').innerHTML.match(/wait/))) )
                            {
                                var col = this.getAttribute('id').replace(/_./,'') //('class').replace('col','').replace(' box','');  i, 
                                //playercol=undef;  //evt. KI rücksetzen
                                werfe(col,0);audiop.play()
                                document.title="4Gewinnt:"+(1*col+1) //+col

  //server
websocket.send(1*(netcolor)*(1*col+1));  //window.location.search.slice(1) || 1
clearTimeout(t);
                                //check4End(col,i);
                            } else if(gameOver == true) start()
                            
                        }, false);
                    }
                }


  //hole daten vom server index.html?-1

if (netcolor==-1) {document.getElementById('net').innerHTML=" (wait! ...for server)";

    websocket = new WebSocket("ws://127.0.0.1:8080/");
    websocket.onopen = function(evt) { onOpen(evt) };
    websocket.onmessage = function(evt) { onMessage(evt) };
    }

dropbox = document.getElementsByTagName("body")[0];  //drag bg-image to game
dropbox.addEventListener("dragenter", dragenter, false);
dropbox.addEventListener("dragover", dragover, false);
dropbox.addEventListener("drop", drop, false);



            }
            
//            init();
//        };


  function onOpen(evt)
  {
    if (netcolor==-1) websocket.send("-10");  //-10=newgame; both player start with 4connect.htm?-1
else t=setTimeout(function(){websocket.close();alert("canceled");location.reload();}, 180000)  //dont block  location.href=location.href+"?-1"
  }

  function onMessage(evt)
  {
var sv=evt.data
var info=document.getElementById('net')
//alert(sv)
if (netcolor==-1 && firstxhr) {firstxhr=false;info.innerHTML=" (wait! ...for player)";}
else if (netcolor==-1 && (sv==-10)) {netcolor=1;info.innerHTML=""}  //"4connect.htm"  location.href=location.href.replace(/\?-1/,"")
else if ((sv==-10) || (sv==0)) location.reload();  //unload

else if ( sv*(netcolor) >= 0 )  //0=saved  || sv==10  window.location.search.slice(1)||1
  {info.innerHTML=" (wait! ...)";setTimeout(function(){if(gameOver == true) start()}, 1000)}  
else
  {info.innerHTML="";werfe(Math.abs(1*sv)-1,0);}  //if (sv==-10) location.reload();

  }

function dragenter(e) {e.stopPropagation();e.preventDefault();}
function dragover(e)  {e.stopPropagation();e.preventDefault();}
function drop(e)      {e.stopPropagation();e.preventDefault();
  var dt = e.dataTransfer;var files = dt.files;handleFiles(files);}

function handleFiles(files) {
    if (files[0].type.match(/image.*/)) {
      var img = document.createElement("img");
      img.src = (window.URL || window.webkitURL).createObjectURL(files[0]);
bg="url("+img.src+") fixed"  // no-repeat left top
color = -color;start()}

else if (files[0].name.match(/\.sgf|\.tit|\.4gp/)) {  //drag riddle to game
    var fileReader = new FileReader();
    var file = files[0];
                    fileReader.onload = function (event) {
                    var a=(event.target.result);
if (files[0].name.match(/\.4gp/)) a=a.slice(1)  //Mustrum
var n=a.split(";"); a=n[0]; if(n[1]) p1=n[1]; if(n[2]) p2=n[2]; if(n[3]) document.getElementById('feld').style.background=n[3]
iwerfe(a)
 };
                    fileReader.readAsText(file);}
}

function iwerfe(a) {
var n=a.split("");
color = -1;start();i=0;  //-color
if (n[0]) t=setInterval(function(){werfe(n[i]-1,0); i++; if(i==n.length) clearInterval(t)}, 140) }

    </script>
    <style>
        .box
        {
            width:40px;
            height:40px;
            border:1px solid #000;
            margin:1px;
            float:left;border-radius:50%;
            /* background: white  url('paper.gif') fixed */
            box-shadow: 1px 1px 1px black inset;
        }
        .box:hover {cursor:pointer;}
        #feld 
        {
            background-color: rgba(0,128,0,0.9);  /* fallback */
            background: -webkit-linear-gradient(45deg, green, lightgreen);
            background: linear-gradient(to bottom right, green, lightgreen);
            box-shadow: 1px 1px 2px black;
            width:308px; }
        .clear
        {clear:both;}
    </style>
</head>
<body onload="init()" onkeyup="if(event.keyCode == 48) ki(); else if(!gameOver) tasten(event.keyCode); else start()">
<div name="feld" id="feld">
    <div id="0_0" class="box"></div>
    <div id="1_0" class="box"></div>
    <div id="2_0" class="box"></div>
    <div id="3_0" class="box"></div>
    <div id="4_0" class="box"></div>
    <div id="5_0" class="box"></div>
    <div id="6_0" class="box"></div>
    <div class="clear"></div>
    <div id="0_1" class="box"></div>
    <div id="1_1" class="box"></div>
    <div id="2_1" class="box"></div>
    <div id="3_1" class="box"></div>
    <div id="4_1" class="box"></div>
    <div id="5_1" class="box"></div>
    <div id="6_1" class="box"></div>
    <div class="clear"></div>
    <div id="0_2" class="box"></div>
    <div id="1_2" class="box"></div>
    <div id="2_2" class="box"></div>
    <div id="3_2" class="box"></div>
    <div id="4_2" class="box"></div>
    <div id="5_2" class="box"></div>
    <div id="6_2" class="box"></div>
    <div class="clear"></div>
    <div id="0_3" class="box"></div>
    <div id="1_3" class="box"></div>
    <div id="2_3" class="box"></div>
    <div id="3_3" class="box"></div>
    <div id="4_3" class="box"></div>
    <div id="5_3" class="box"></div>
    <div id="6_3" class="box"></div>
    <div class="clear"></div>
    <div id="0_4" class="box"></div>
    <div id="1_4" class="box"></div>
    <div id="2_4" class="box"></div>
    <div id="3_4" class="box"></div>
    <div id="4_4" class="box"></div>
    <div id="5_4" class="box"></div>
    <div id="6_4" class="box"></div>
    <div class="clear"></div>
    <div id="0_5" class="box"></div>
    <div id="1_5" class="box"></div>
    <div id="2_5" class="box"></div>
    <div id="3_5" class="box"></div>
    <div id="4_5" class="box"></div>
    <div id="5_5" class="box"></div>
    <div id="6_5" class="box"></div>
    <div class="clear"></div></div>
    <br>
    <a href="javascript:ki();if (autoki=='on') void(aki=color)" title="KI"><div style="background: rgb(0, 0, 255);" id="info" class="box"></div></a>
    &nbsp;<a id="infotext" download="savegame.sgf" style="background-color: white;text-decoration:none;color:black">&nbsp;ist am Zug</a><span id="net" style="background-color: white;"></span>
<script>
	if ('serviceWorker' in navigator) {
  window.addEventListener('load', function() {
    navigator.serviceWorker.register('sw.js').then(function(registration) {
      // Registration was successful
      console.log('ServiceWorker registration successful with scope: ', registration.scope);
    }).catch(function(err) {
      // registration failed :(
      console.log('ServiceWorker registration failed: ', err);
    });
  });
}
</script>
	</body>
    </html>
